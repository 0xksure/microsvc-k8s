apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    project: microservice
    app: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: err/frontend
          imagePullPolicy: Never
          resources:
            limits:
              memory: "128Mi"
              cpu: "200m"
          ports:
            - containerPort: 3000
              name: frontend-port
          env:
            - name: RPC_URL
              valueFrom:
                configMapKeyRef:
                  name: secret-vault
                  key: RPC_URL
            - name: WALLET_SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  name: secret-vault
                  key: WALLET_SECRET_KEY
            - name: GITHUB_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: secret-vault
                  key: GITHUB_OAUTH_CLIENT_ID
            - name: GITHUB_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: secret-vault
                  key: GITHUB_OAUTH_CLIENT_SECRET
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: secret-vault
                  key: JWT_SECRET
            - name: KAFKA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret-vault
                  key: KAFKA_PASSWORD

---
## Load Balancer
apiVersion: v1
kind: Service
metadata:
  name: frontend-lb
  labels:
    project: microservice
    app: frontend-lb
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
    - name: "http"
      port: 3030
      targetPort: 3000
      protocol: TCP
