
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: pql-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage 
  hostPath:
    path: /tmp//var/lib/postgresql
  nodeAffinity:
    required:
      nodeSelectorTerms:
       - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
            - docker-desktop 


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 1Gi  

---

apiVersion: apps/v1
kind: StatefulSet
metadata: 
  name: postgres
  labels:
    project: microservice
    app: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres
        resources:
          limits:
            memory: "128Mi"
            cpu: "200m"
        ports:
        - containerPort: 5432
          name: pql-port
        volumeMounts:
        - name: pql-data
          mountPath: /var/lib/postgresql
        env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: global-config
                key: POSTGRES_PASSWORD
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                name: global-config
                key: POSTGRES_USER
      volumes:
        - name: pql-data
          persistentVolumeClaim:
            claimName: pql-pvc

--- 

## Set up clusterIP 
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
    project: microservice
spec:
  ports:
    - name: postgres-port
      port: 5432
      targetPort: pql-port
  selector:
    app: postgres

---

## Expose psql through NodePort

# apiVersion: v1
# kind: Service
# metadata:
#   name: postgres-proxy
#   labels:
#     app: postgres
#     project: microservice
# spec:
#   type: NodePort
#   selector: 
#     app: postgres
#   ports:
#     - name: pql-proxy-port  
#       targetPort: pql-port # psql internal service port 
#       nodePort: 30001 # external port 
#       port: 5432 # internal port
       