// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package bounty

import ag_binary "github.com/gagliardetto/binary"

type DomainData struct {
	// platform is the domain such as GitHub
	Platform string

	// organization is the identifier within the domain
	// like sandblizzard
	// FIXME: rename
	Organization string

	// team is the identifier within the domain
	// like rewards_v1. This corresponds to the Bounty
	Team       string
	DomainType string
}

func (obj DomainData) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `Platform` param:
	err = encoder.Encode(obj.Platform)
	if err != nil {
		return err
	}
	// Serialize `Organization` param:
	err = encoder.Encode(obj.Organization)
	if err != nil {
		return err
	}
	// Serialize `Team` param:
	err = encoder.Encode(obj.Team)
	if err != nil {
		return err
	}
	// Serialize `DomainType` param:
	err = encoder.Encode(obj.DomainType)
	if err != nil {
		return err
	}
	return nil
}

func (obj *DomainData) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `Platform`:
	err = decoder.Decode(&obj.Platform)
	if err != nil {
		return err
	}
	// Deserialize `Organization`:
	err = decoder.Decode(&obj.Organization)
	if err != nil {
		return err
	}
	// Deserialize `Team`:
	err = decoder.Decode(&obj.Team)
	if err != nil {
		return err
	}
	// Deserialize `DomainType`:
	err = decoder.Decode(&obj.DomainType)
	if err != nil {
		return err
	}
	return nil
}

type BountyState ag_binary.BorshEnum

const (
	BountyStateCreated BountyState = iota
	BountyStateCompleted
)

func (value BountyState) String() string {
	switch value {
	case BountyStateCreated:
		return "Created"
	case BountyStateCompleted:
		return "Completed"
	default:
		return ""
	}
}
